---
# Source: mushop/charts/edge/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mushop-edge
  labels:
    app.kubernetes.io/name: edge
    app.kubernetes.io/instance: mushop
    layer: client
    app.kubernetes.io/version: "0.1.0"
data:
  traefik.toml: |+
    logLevel = "INFO"
  
    [web]
    address = ":8888"
  
    [entryPoints]
      [entryPoints.http]
        address = ":8080"
  
    [ping]
    entryPoint = "http"
  
    [file]
      [backends]
        # api
        [backends.api]
          [backends.api.loadbalancer]
            method = "wrr"
          [backends.api.servers.server1]
            url = "http://mushop-api"
        # web
        [backends.web1]
          [backends.web1.loadbalancer]
            method = "wrr"
          [backends.web1.servers.server1]
            url = "http://mushop-storefront"
  
      [frontends]
        [frontends.api]
          backend = "api"
          entrypoints = ["http"]
          [frontends.api.routes.test1]
            rule = "PathPrefix:/api/"
        [frontends.web1]
          backend = "web1"
          entrypoints = ["http"]
  
  
---
# Source: mushop/charts/api/templates/api-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mushop-api
  labels:
    app.kubernetes.io/name: api
    app.kubernetes.io/instance: mushop
    layer: client
    app.kubernetes.io/version: "0.1.0"
spec:
  selector:
    app.kubernetes.io/name: api
    app.kubernetes.io/instance: mushop
    layer: "client"
  ports:
    - port: 80
      targetPort: 3000

---
# Source: mushop/charts/catalogue/templates/catalogue-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mushop-catalogue
  labels:
    app.kubernetes.io/name: catalogue
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
spec:
  selector:
    app.kubernetes.io/name: catalogue
    app.kubernetes.io/instance: mushop
  ports:
    - port: 80
      targetPort: 80

---
# Source: mushop/charts/edge/templates/edge-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: edge
  labels:
    app.kubernetes.io/name: edge
    app.kubernetes.io/instance: mushop
    layer: client
    app.kubernetes.io/version: "0.1.0"
spec:
  selector:
    app.kubernetes.io/name: edge
    app.kubernetes.io/instance: mushop
    layer: client
  ports:
    - port: 80
      targetPort: 8080
---
# Source: mushop/charts/session/templates/session-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mushop-session
  labels:
    app.kubernetes.io/name: session
    app.kubernetes.io/instance: mushop
    layer: client
    app.kubernetes.io/version: "0.1.0"
spec:
  selector:
    app.kubernetes.io/name: session
    app.kubernetes.io/instance: mushop
    layer: client
  ports:
    - port: 6379
---
# Source: mushop/charts/storefront/templates/storefront-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mushop-storefront
  labels:
    app.kubernetes.io/name: storefront
    app.kubernetes.io/instance: mushop
    layer: client
    app.kubernetes.io/version: "0.1.0"
spec:
  selector:
    app.kubernetes.io/name: storefront
    app.kubernetes.io/instance: mushop
    layer: "client"
  ports:
    - port: 80
      targetPort: 8080

---
# Source: mushop/charts/api/templates/api-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mushop-api
  labels:
    app.kubernetes.io/name: api
    app.kubernetes.io/instance: mushop
    layer: client
    app.kubernetes.io/version: "0.1.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: api
      app.kubernetes.io/instance: mushop
      layer: client
  template:
    metadata:
      labels:
        app.kubernetes.io/name: api
        app.kubernetes.io/instance: mushop
        layer: client
    spec:
      containers:
        - name: api
          image: "phx.ocir.io/intvravipati/mushop/api:2.0.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
          env:
          - name: MOCK_MODE
            value: "all"
          - name: SESSION_REDIS
            value: mushop-session
          - name: CATALOGUE_URL
            value: http://mushop-catalogue
          - name: ORDERS_URL
            value: http://mushop-orders
          - name: CARTS_URL
            value: http://mushop-carts
          - name: USERS_URL
            value: http://mushop-user
          - name: STATIC_MEDIA_URL
            value: ""
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 100Mi
            
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001

---
# Source: mushop/charts/catalogue/templates/catalogue-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mushop-catalogue
  labels: 
    app.kubernetes.io/name: catalogue
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: catalogue
      app.kubernetes.io/instance: mushop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: catalogue
        app.kubernetes.io/instance: mushop
    spec:
      terminationGracePeriodSeconds: 5
      initContainers:
        
      containers:
        - name: catalogue
          image: "phx.ocir.io/intvravipati/mushop/catalogue:1.2"
          imagePullPolicy: IfNotPresent
          command: ["/app"]
          args:
          - -port=80
          ports:
            - name: http
              containerPort: 80
          env:
            - name: ZIPKIN
              value: 
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 120
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
            
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true

---
# Source: mushop/charts/edge/templates/edge-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mushop-edge
  labels:
    app.kubernetes.io/name: edge
    app.kubernetes.io/instance: mushop
    layer: client
    app.kubernetes.io/version: "0.1.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: edge
      app.kubernetes.io/instance: mushop
      layer: client
  template:
    metadata:
      labels:
        app.kubernetes.io/name: edge
        app.kubernetes.io/instance: mushop
        layer: client
    spec:
      containers:
        - name: edge
          image: "phx.ocir.io/intvravipati/mushop/edge-router:1"
          imagePullPolicy: IfNotPresent
          args:
          - --configfile=/config/traefik.toml
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
            - mountPath: /config
              name: config
          livenessProbe:
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            httpGet:
              path: /ping
              port: http
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 128Mi
            
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
            
      volumes:
        - name: config
          configMap:
            name: mushop-edge
---
# Source: mushop/charts/session/templates/session-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mushop-session
  labels:
    app.kubernetes.io/name: session
    app.kubernetes.io/instance: mushop
    layer: client
    app.kubernetes.io/version: "0.1.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: session
      app.kubernetes.io/instance: mushop
      layer: client
  template:
    metadata:
      labels:
        app.kubernetes.io/name: session
        app.kubernetes.io/instance: mushop
        layer: client
    spec:
      containers:
        - name: session
          image: "redis:alpine"
          imagePullPolicy: IfNotPresent
          ports:
            - name: redis
              containerPort: 6379
          securityContext:
            capabilities:
              add:
              - CHOWN
              - SETGID
              - SETUID
              drop:
              - all
            readOnlyRootFilesystem: true
            
      nodeSelector:
        beta.kubernetes.io/os: linux
---
# Source: mushop/charts/storefront/templates/storefront-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mushop-storefront
  labels:
    app.kubernetes.io/name: storefront
    app.kubernetes.io/instance: mushop
    layer: client
    app.kubernetes.io/version: "0.1.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: storefront
      app.kubernetes.io/instance: mushop
      layer: client
  template:
    metadata:
      labels:
        app.kubernetes.io/name: storefront
        app.kubernetes.io/instance: mushop
        layer: client
    spec:
      containers:
        - name: storefront
          image: "phx.ocir.io/intvravipati/mushop/storefront:2.0.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
            - name: status
              containerPort: 8888
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 100Mi
            
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              - CHOWN
              - SETGID
              - SETUID
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
            
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
---
# Source: mushop/templates/ingress.yaml

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: mushop
  labels:
    app.kubernetes.io/name: mushop
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "1.0"
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - http:
        paths:
        - path: /
          backend:
            # intentionally w/o .Release.Name for metrics workshop
            serviceName: edge
            servicePort: 80
